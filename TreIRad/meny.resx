<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>